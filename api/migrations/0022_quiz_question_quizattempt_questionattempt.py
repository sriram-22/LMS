# Generated by Django 5.1.3 on 2024-12-18 09:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0021_rename_progresstracking_courseprogresstracking"),
    ]

    operations = [
        migrations.CreateModel(
            name="Quiz",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("total_marks", models.PositiveIntegerField(default=0)),
                ("passing_marks", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quizzes",
                        to="api.coursevideos",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("question", models.TextField()),
                ("marks", models.PositiveIntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.quiz"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QuizAttempt",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("marks_obtained", models.PositiveIntegerField(default=0)),
                ("total_marks", models.PositiveIntegerField()),
                ("qualified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_attempts",
                        to="api.quiz",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("quiz", "student")},
            },
        ),
        migrations.CreateModel(
            name="QuestionAttempt",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("answer", models.TextField()),
                ("is_correct", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="api.question",
                    ),
                ),
                (
                    "quiz_attempt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.quizattempt",
                    ),
                ),
            ],
            options={
                "unique_together": {("quiz_attempt", "question")},
            },
        ),
    ]
